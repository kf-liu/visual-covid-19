{"version":3,"sources":["components/MainEChartsRiver.js","components/MainEChartsBar.js","components/DeECharts.js","components/MoreECharts.js","components/MainNav.js","components/SubNav.js","js/index.js","App.js","serviceWorker.js","index.js"],"names":["provinceNewConfirmedData","provinceNewConfirmed","arrayList","countryNewConfirmedData","countryNewConfirmed","getRiverArr","jsonObj","province","arr","index","k","push","parseInt","MainEChartsRiver","props","draw","provinces","riverArr","level2","getJson","key","Array","level1","echarts","init","document","getElementById","setOption","title","tooltip","trigger","axisPointer","type","lineStyle","color","width","legend","data","singleAxis","top","bottom","axisTick","axisLabel","animation","label","show","splitLine","opacity","dataZoom","start","beginTime","end","endTime","series","emphasis","itemStyle","shadowBlur","shadowColor","state","bind","this","id","style","height","window","innerHeight","Component","provinceDataList","provinceNewDeath","provinceNewRecvered","countryNewDeathData","countryNewDeath","countryNewDeathdData","countryNewRecvered","countryDataList","MainEChartsBar","date","dataList","NewConfirmed","NewDeath","NewRecovered","list","getDate","d","toolbox","feature","magicType","dataView","saveAsImage","pixelRatio","xAxis","yAxis","name","MainEChartsType","animationDelay","idx","animationEasing","animationDelayUpdate","getPieSeriesUpdate","scatterData","chart","util","map","item","center","convertToPixel","cellSize","DeECharts","pieInitialized","number","parseDate","time","format","formatTime","Math","floor","random","getVirtulData","myChart","calendar","left","orient","yearLabel","textStyle","fontSize","dayLabel","margin","firstDay","nameMap","monthLabel","range","DeEChartsM","coordinateSystem","symbolSize","normal","formatter","params","value","offset","setTimeout","getPieSeries","onresize","i","arrList","v","radius","provinceTotelConfirmed","gdpData","peopleData","hospitalData","MoreECharts","gdp","people","hospital","confirmed","right","scale","yAxisIndex","filterMode","showDataShadow","sqrt","param","position","backgroundColor","borderColor","borderWidth","borderRadius","padding","shadowOffsetX","shadowOffsetY","lineHeight","rich","a","textBorderColor","textBorderWidth","b","c","textShadowBlur","textShadowColor","country","makeStyles","theme","root","heading","typography","pxToRem","fontWeight","fontWeightRegular","MainNav","setArea","setState","defaultExpanded","className","Accordion","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","Button","onClick","SubNav","setMainEChartsType","setDeEChartsM","handleChange","event","newValue","setTime","variant","gutterBottom","Slider","timeValue","onChange","valueLabelDisplay","aria-labelledby","FormControl","InputLabel","shrink","Select","labelId","displayEmpty","MenuItem","$","ready","click","css","parentNode","previousElementSibling","App","begin","timeValueText","MainECharts","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6a992d16.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport echarts from 'echarts';\r\n\r\n// 国内数据\r\nimport provinceNewConfirmed from '../data/China (Provincial-level)/New_confirmed.json';\r\n\r\n//国际数据\r\nimport countryNewConfirmed from '../data/Global/New_confirmed.json';\r\n\r\nlet provinceNewConfirmedData = provinceNewConfirmed.arrayList;\r\nlet countryNewConfirmedData = countryNewConfirmed.arrayList;\r\n\r\nfunction getJson(key, jsonObj) {\r\n    var arr = [];\r\n    for (var index in jsonObj) {\r\n        for (var k in jsonObj[index]) {\r\n            if (k === key) {\r\n                arr.push(jsonObj[index][key]);\r\n            } else if (jsonObj[index][k] instanceof Array) {\r\n                getJson(key, jsonObj[index][k]);\r\n            }\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nfunction getRiverArr(jsonObj, province) {\r\n    var arr = [];\r\n    for (var index in jsonObj) {\r\n        if (province !== '中国（含港澳台）' && jsonObj[index]['Region_CN'] !== province) continue;\r\n        for (var k in jsonObj[index]) {\r\n            if (k === 'Region_CN' || k === 'Region_EN') continue;\r\n            arr.push([k, parseInt(jsonObj[index][k]), jsonObj[index]['Region_CN']]);\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport class MainEChartsRiver extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            level1: this.props.level1,\r\n            level2: this.props.level2\r\n        };\r\n        this.draw = this.draw.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.draw();\r\n    }\r\n    componentDidUpdate() {\r\n        this.draw();\r\n    }\r\n\r\n    draw = () => {\r\n\r\n        var provinces = [];\r\n        var riverArr = [];\r\n\r\n        if (this.props.level2 === '中国（含港澳台）') {\r\n            provinces = getJson('Region_CN', provinceNewConfirmedData);\r\n            riverArr = getRiverArr(provinceNewConfirmedData, this.props.level2);\r\n        } else if (this.props.level1 === 'china') {\r\n            provinces = [this.props.level2];\r\n            riverArr = getRiverArr(provinceNewConfirmedData, this.props.level2);\r\n        } else if (this.props.level1 === 'global') {\r\n            provinces = [this.props.level2];//getJson('Region_CN', provinceNewConfirmedData);\r\n            riverArr = getRiverArr(countryNewConfirmedData, this.props.level2);\r\n        }\r\n\r\n        let mycharts = echarts.init(document.getElementById('mycharts'));\r\n\r\n        mycharts.setOption({\r\n            title: {\r\n                // text: this.props.level2\r\n            },\r\n\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                axisPointer: {\r\n                    type: 'line',\r\n                    lineStyle: {\r\n                        color: 'rgba(0,0,0,0.2)',\r\n                        width: 1,\r\n                        type: 'solid'\r\n                    }\r\n                }\r\n            },\r\n\r\n            legend: {\r\n                data: provinces\r\n            },\r\n\r\n            singleAxis: {\r\n                top: 50,\r\n                bottom: 50,\r\n                axisTick: {},\r\n                axisLabel: {},\r\n                type: 'time',\r\n                axisPointer: {\r\n                    animation: true,\r\n                    label: {\r\n                        show: true\r\n                    }\r\n                },\r\n                splitLine: {\r\n                    show: true,\r\n                    lineStyle: {\r\n                        type: 'dashed',\r\n                        opacity: 0.2\r\n                    }\r\n                }\r\n            },\r\n\r\n            dataZoom: [\r\n                {\r\n                    type: 'slider',\r\n                    show: true,\r\n                    singleAxis: [0],\r\n                    start: this.props.beginTime,\r\n                    end: this.props.endTime\r\n                },\r\n                {\r\n                    type: 'inside',\r\n                    show: true,\r\n                    singleAxis: [0],\r\n                    start: this.props.beginTime,\r\n                    end: this.props.endTime\r\n                }\r\n            ],\r\n\r\n            series: [\r\n                {\r\n                    type: 'themeRiver',\r\n                    emphasis: {\r\n                        itemStyle: {\r\n                            shadowBlur: 20,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.8)'\r\n                        }\r\n                    },\r\n                    data: riverArr\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id='mycharts' style={{ width: '100%', height: window.innerHeight * 0.5 }}>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport echarts from 'echarts';\r\n\r\n// 国内数据\r\nimport provinceNewConfirmed from '../data/China (Provincial-level)/New_confirmed.json';\r\nimport provinceNewDeath from '../data/China (Provincial-level)/New_death.json';\r\nimport provinceNewRecvered from '../data/China (Provincial-level)/New_recovered.json';\r\n\r\n//国际数据\r\nimport countryNewConfirmed from '../data/Global/New_confirmed.json';\r\nimport countryNewDeath from '../data/Global/New_death.json';\r\nimport countryNewRecvered from '../data/Global/New_recovered.json';\r\n\r\nlet provinceNewConfirmedData = provinceNewConfirmed.arrayList;\r\nlet provinceNewDeathData = provinceNewDeath.arrayList;\r\nlet provinceNewDeathdData = provinceNewRecvered.arrayList;\r\nlet provinceDataList = [provinceNewConfirmedData, provinceNewDeathData, provinceNewDeathdData]\r\n\r\nlet countryNewConfirmedData = countryNewConfirmed.arrayList;\r\nlet countryNewDeathData = countryNewDeath.arrayList;\r\nlet countryNewDeathdData = countryNewRecvered.arrayList;\r\nlet countryDataList = [countryNewConfirmedData, countryNewDeathData, countryNewDeathdData]\r\n\r\nfunction getDate() {\r\n    var arr = [];\r\n    for (var index in countryNewConfirmedData[0]) {\r\n        if (index == 'Region_CN' || index == 'Region_EN') continue;\r\n        arr.push(index);\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport class MainEChartsBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            level1: this.props.level1,\r\n            level2: this.props.level2\r\n        };\r\n        this.draw = this.draw.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.draw();\r\n    }\r\n    componentDidUpdate() {\r\n        this.draw();\r\n    }\r\n\r\n    draw = () => {\r\n\r\n        var date = [];\r\n        var dataList = [];\r\n        var NewConfirmed = [];\r\n        var NewDeath = [];\r\n        var NewRecovered = [];\r\n\r\n        date = getDate();\r\n\r\n        // if (this.props.level2 == '中国（含港澳台）') {\r\n        //     provinces = getJson('Region_CN', provinceNewConfirmedData);\r\n        //     riverArr = getRiverArr(provinceNewConfirmedData, this.props.level2);\r\n        // } else \r\n        if (this.props.level1 == 'china') {\r\n            dataList = provinceDataList;\r\n        } else if (this.props.level1 == 'global') {\r\n            dataList = countryDataList;\r\n        }\r\n\r\n        for (var list in dataList) {\r\n            var arr = [];\r\n            for (var k in dataList[list]) {\r\n                if (this.props.level2 != dataList[list][k]['Region_CN']) {\r\n                    continue;\r\n                } else {\r\n                    for (var d in dataList[list][k]) {\r\n                        if (d != 'Region_CN' && d != 'Region_EN') {\r\n                            arr.push(dataList[list][k][d]);\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            if (list == 0) {\r\n                NewConfirmed = arr;\r\n            } else if (list == 1) {\r\n                NewDeath = arr;\r\n            } else if (list == 2) {\r\n                NewRecovered = arr;\r\n            }\r\n        }\r\n\r\n        let mycharts = echarts.init(document.getElementById('mycharts'));\r\n\r\n        mycharts.setOption({\r\n            legend: {\r\n                data: ['新增', '死亡', '痊愈']\r\n            },\r\n            toolbox: {\r\n                // y: 'bottom',\r\n                feature: {\r\n                    magicType: {\r\n                        type: ['stack', 'tiled']\r\n                    },\r\n                    dataView: {},\r\n                    saveAsImage: {\r\n                        pixelRatio: 2\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {},\r\n            xAxis: {\r\n                data: date,\r\n                splitLine: {\r\n                    show: false\r\n                }\r\n            },\r\n            yAxis: {\r\n            },\r\n            series: [\r\n                {\r\n                    name: '新增',\r\n                    type: this.props.MainEChartsType,\r\n                    data: NewConfirmed,\r\n                    animationDelay: function (idx) {\r\n                        return idx * 10;\r\n                    }\r\n                },\r\n                {\r\n                    name: '死亡',\r\n                    type: this.props.MainEChartsType,\r\n                    data: NewDeath,\r\n                    animationDelay: function (idx) {\r\n                        return idx * 10 + 100;\r\n                    }\r\n                },\r\n                {\r\n                    name: '痊愈',\r\n                    type: this.props.MainEChartsType,\r\n                    data: NewRecovered,\r\n                    animationDelay: function (idx) {\r\n                        return idx * 10 + 100;\r\n                    }\r\n                }\r\n            ],\r\n            animationEasing: 'elasticOut',\r\n            animationDelayUpdate: function (idx) {\r\n                return idx * 5;\r\n            },\r\n            dataZoom: [\r\n                {\r\n                    type: 'slider',\r\n                    show: true,\r\n                    singleAxis: [0],\r\n                    start: this.props.beginTime,\r\n                    end: this.props.endTime\r\n                },\r\n                {\r\n                    type: 'inside',\r\n                    show: true,\r\n                    singleAxis: [0],\r\n                    start: this.props.beginTime,\r\n                    end: this.props.endTime\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id='mycharts' style={{ width: '100%', height: window.innerHeight * 0.5 }}>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport echarts from 'echarts';\r\n\r\n// 国内数据\r\nimport provinceNewConfirmed from '../data/China (Provincial-level)/New_confirmed.json';\r\nimport provinceNewDeath from '../data/China (Provincial-level)/New_death.json';\r\nimport provinceNewRecvered from '../data/China (Provincial-level)/New_recovered.json';\r\n\r\n//国际数据\r\nimport countryNewConfirmed from '../data/Global/New_confirmed.json';\r\nimport countryNewDeath from '../data/Global/New_death.json';\r\nimport countryNewRecvered from '../data/Global/New_recovered.json';\r\n\r\nlet provinceNewConfirmedData = provinceNewConfirmed.arrayList;\r\nlet provinceNewDeathData = provinceNewDeath.arrayList;\r\nlet provinceNewDeathdData = provinceNewRecvered.arrayList;\r\nlet provinceDataList = [provinceNewConfirmedData, provinceNewDeathData, provinceNewDeathdData]\r\n\r\nlet countryNewConfirmedData = countryNewConfirmed.arrayList;\r\nlet countryNewDeathData = countryNewDeath.arrayList;\r\nlet countryNewDeathdData = countryNewRecvered.arrayList;\r\nlet countryDataList = [countryNewConfirmedData, countryNewDeathData, countryNewDeathdData]\r\n\r\nfunction getVirtulData() {\r\n    var date = +echarts.number.parseDate('2019-12-31');\r\n    var end = +echarts.number.parseDate('2020-05-27');\r\n    var dayTime = 3600 * 24 * 1000;\r\n    var data = [];\r\n    for (var time = date; time < end; time += dayTime) {\r\n        data.push([\r\n            echarts.format.formatTime('yyyy-MM-dd', time),\r\n            Math.floor(Math.random() * 10000)\r\n        ]);\r\n    }\r\n    return data;\r\n}\r\n\r\n// function \r\n\r\nfunction getPieSeriesUpdate(scatterData, chart) {\r\n    return echarts.util.map(scatterData, function (item, index) {\r\n        var center = chart.convertToPixel('calendar', item);\r\n        return {\r\n            id: index + 'pie',\r\n            center: center\r\n        };\r\n    });\r\n}\r\n\r\nvar cellSize = [50, 40];\r\nvar pieRadius = 12;\r\nvar level1 = '';\r\nvar level2 = '';\r\n\r\nexport class DeECharts extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            level1: this.props.level1,\r\n            level2: this.props.level2\r\n        };\r\n        this.draw = this.draw.bind(this);\r\n        this.getPieSeries = this.getPieSeries.bind(this);\r\n        // level1 = this.props.level1;\r\n        // level2 = this.props.level2;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.draw();\r\n    }\r\n    componentDidUpdate() {\r\n        this.draw();\r\n    }\r\n\r\n    getPieSeries(scatterData, chart) {\r\n        var i = 0;\r\n        var arrList = [];\r\n        if (this.props.level1 === 'china') {\r\n            arrList = provinceDataList;\r\n        } else if (this.props.level1 === 'global') {\r\n            arrList = countryDataList;\r\n        }\r\n        for (var v in arrList[0]) {\r\n            if (arrList[0][v]['Region_CN'] !== this.props.level2) continue;\r\n            i = v;\r\n            break;\r\n        }\r\n        return echarts.util.map(scatterData, function (item, index) {\r\n            var center = chart.convertToPixel('calendar', item);\r\n            return {\r\n                id: index + 'pie',\r\n                type: 'pie',\r\n                center: center,\r\n                // roseType: 'radius',\r\n                label: {\r\n                    // normal: {\r\n                    //     formatter: '{c}',\r\n                    //     position: 'inside'\r\n                    // }\r\n                    show: false\r\n                },\r\n                radius: pieRadius,\r\n                data: [\r\n                    { name: '新增', value: arrList[0][i][item[0]] },\r\n                    { name: '死亡', value: arrList[1][i][item[0]] },\r\n                    { name: '痊愈', value: arrList[2][i][item[0]] }\r\n                ]\r\n            };\r\n        });\r\n    }\r\n\r\n    draw = () => {\r\n\r\n        var scatterData = getVirtulData();\r\n\r\n\r\n        let myChart = echarts.init(document.getElementById('decharts'));\r\n\r\n        myChart.setOption({\r\n            // title: {\r\n            //     text: this.props.DeEChartsM,\r\n            // },\r\n            tooltip: {},\r\n            legend: {\r\n                data: ['新增', '死亡', '痊愈'],\r\n                bottom: 20\r\n            },\r\n            calendar: {\r\n                top: 'middle',\r\n                left: 'center',\r\n                orient: 'vertical',\r\n                cellSize: cellSize,\r\n                yearLabel: {\r\n                    show: false,\r\n                    textStyle: {\r\n                        fontSize: 30\r\n                    }\r\n                },\r\n                dayLabel: {\r\n                    margin: 20,\r\n                    firstDay: 1,\r\n                    nameMap: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\r\n                },\r\n                monthLabel: {\r\n                    show: true\r\n                },\r\n                range: this.props.DeEChartsM\r\n            },\r\n            series: [{\r\n                id: 'label',\r\n                type: 'scatter',\r\n                coordinateSystem: 'calendar',\r\n                symbolSize: 1,\r\n                label: {\r\n                    normal: {\r\n                        show: true,\r\n                        formatter: function (params) {\r\n                            return echarts.format.formatTime('dd', params.value[0]);\r\n                        },\r\n                        offset: [-cellSize[0] / 2 + 10, -cellSize[1] / 2 + 10],\r\n                        textStyle: {\r\n                            color: '#000',\r\n                            fontSize: 14\r\n                        }\r\n                    }\r\n                },\r\n                data: scatterData\r\n            }]\r\n        })\r\n\r\n        var pieInitialized;\r\n        setTimeout(() => {\r\n            pieInitialized = true;\r\n            myChart.setOption({\r\n                series: this.getPieSeries(scatterData, myChart)\r\n            });\r\n        }, 10);\r\n\r\n        this.onresize = function () {\r\n            if (pieInitialized) {\r\n                myChart.setOption({\r\n                    series: getPieSeriesUpdate(scatterData, myChart)\r\n                });\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id='decharts' style={{ width: '100%', height: window.innerHeight * 0.5 }}>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport echarts from 'echarts';\r\n\r\n// 国内数据\r\nimport provinceTotelConfirmed from '../data/China (Provincial-level)/Totel_confirmed.json';\r\nimport provinceNewDeath from '../data/China (Provincial-level)/New_death.json';\r\nimport provinceNewRecvered from '../data/China (Provincial-level)/New_recovered.json';\r\n\r\n//国际数据\r\nimport countryNewConfirmed from '../data/Global/New_confirmed.json';\r\nimport countryNewDeath from '../data/Global/New_death.json';\r\nimport countryNewRecvered from '../data/Global/New_recovered.json';\r\n\r\n//分省人均GDP与分省人口\r\nimport gdpData from '../data/others/gdp.json';\r\nimport peopleData from '../data/others/people.json';\r\nimport hospitalData from '../data/others/hospital.json';\r\n\r\nlet provinceTotelConfirmedData = provinceTotelConfirmed.arrayList;\r\nlet provinceNewDeathData = provinceNewDeath.arrayList;\r\nlet provinceNewDeathdData = provinceNewRecvered.arrayList;\r\nlet provinceDataList = [provinceTotelConfirmedData, provinceNewDeathData, provinceNewDeathdData, gdpData['arrayList'], peopleData['arrayList'], hospitalData['arrayList']]\r\n\r\nlet countryNewConfirmedData = countryNewConfirmed.arrayList;\r\nlet countryNewDeathData = countryNewDeath.arrayList;\r\nlet countryNewDeathdData = countryNewRecvered.arrayList;\r\nlet countryDataList = [countryNewConfirmedData, countryNewDeathData, countryNewDeathdData]\r\n\r\nexport class MoreECharts extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            level1: this.props.level1,\r\n            level2: this.props.level2\r\n        };\r\n        this.draw = this.draw.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.draw();\r\n    }\r\n    componentDidUpdate() {\r\n        this.draw();\r\n    }\r\n\r\n    draw = () => {\r\n        var data = [\r\n            [],\r\n            []\r\n        ];\r\n\r\n        var dataList = [];\r\n\r\n        if (this.props.level1 === 'china') {\r\n            dataList = provinceDataList;\r\n        }\r\n\r\n        var i = 1;\r\n        for (var arr in dataList[3]) {\r\n            if (dataList[3][arr]['地区'] === this.props.level2) {\r\n                i = 0;\r\n            }\r\n            for (var v in dataList[0]) {\r\n                if (dataList[0][v]['Region_CN'] !== dataList[3][arr]['地区']) continue;\r\n                var k = v;\r\n                break;\r\n            }\r\n            var province = dataList[3][arr]['地区'];\r\n            var gdp = dataList[3][arr]['2019年'];\r\n            var people = dataList[4][arr]['2019年'];\r\n            var hospital = dataList[5][arr]['2018年'];\r\n            var confirmed = dataList[0][k]['2020-05-27'];\r\n            data[i].push([gdp, hospital / people, confirmed / people * 100, province, people, hospital, confirmed]);\r\n            i = 1;\r\n        }\r\n\r\n        let mycharts = echarts.init(document.getElementById('mcharts'));\r\n\r\n        mycharts.setOption({\r\n            legend: {\r\n                right: 10,\r\n                data: [this.props.level2, this.props.level1]\r\n            },\r\n            xAxis: {\r\n                splitLine: {\r\n                    lineStyle: {\r\n                        type: 'dashed'\r\n                    }\r\n                },\r\n                name: '人均GDP',\r\n            },\r\n            yAxis: {\r\n                splitLine: {\r\n                    lineStyle: {\r\n                        type: 'dashed'\r\n                    }\r\n                },\r\n                scale: true,\r\n                name: '人均综合医院数*10000',\r\n            },\r\n            dataZoom: [\r\n                {\r\n                    show: true,\r\n                    start: 0,\r\n                    end: 100\r\n                },\r\n                {\r\n                    start: 0,\r\n                    end: 100\r\n                },\r\n                {\r\n                    type: 'inside',\r\n                    show: true,\r\n                    yAxisIndex: 0,\r\n                    filterMode: 'empty',\r\n                    width: 30,\r\n                    height: '80%',\r\n                    showDataShadow: false,\r\n                    left: '93%'\r\n                }\r\n            ],\r\n            series: [{\r\n                name: this.props.level2,\r\n                data: data[0],\r\n                type: 'scatter',\r\n                symbolSize: function (data) {\r\n                    return Math.sqrt(data[2], 4) * 4;\r\n                },\r\n                emphasis: {\r\n                    label: {\r\n                        show: true,\r\n                        formatter: function (param) {\r\n                            return ['{a|' + param.data[3] + '}\\n{b|GDP:}{c|' + param.data[0] + '}{b|元/人\\n人口:}{c|' + param.data[4] + '}{b|万人\\n医院:}{c|' + param.data[5] + '}{b|个\\n确诊:}{c|' + param.data[6] + '}{b|人}'];\r\n                        },\r\n                        position: 'top',\r\n                        backgroundColor: 'rgb(255,255,255,200)',\r\n                        // borderColor: '#333',\r\n                        borderColor: '#48B2BA',\r\n                        borderWidth: 2,\r\n                        borderRadius: 5,\r\n                        padding: 10,\r\n                        color: '#000',\r\n                        fontSize: 14,\r\n                        shadowBlur: 3,\r\n                        shadowColor: '#888',\r\n                        shadowOffsetX: 0,\r\n                        shadowOffsetY: 3,\r\n                        lineHeight: 18,\r\n                        rich: {\r\n                            a: {\r\n                                textBorderColor: '#000',\r\n                                textBorderWidth: 1\r\n                            },\r\n                            b: {\r\n                                color: '#000'\r\n                            },\r\n                            c: {\r\n                                color: '#48B2BA',\r\n                                textShadowBlur: 1,\r\n                                textShadowColor: '#888',\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n            }, {\r\n                name: this.props.level1,\r\n                data: data[1],\r\n                type: 'scatter',\r\n                symbolSize: function (data) {\r\n                    return Math.sqrt(data[2], 4) * 4;\r\n                },\r\n                emphasis: {\r\n                    label: {\r\n                        show: true,\r\n                        formatter: function (param) {\r\n                            return ['{a|' + param.data[3] + '}\\n{b|GDP:}{c|' + param.data[0] + '}{b|元/人\\n人口:}{c|' + param.data[4] + '}{b|万人\\n医院:}{c|' + param.data[5] + '}{b|个\\n确诊:}{c|' + param.data[6] + '}{b|人}'];\r\n                        },\r\n                        position: 'top',\r\n                        backgroundColor: 'rgb(255,255,255,200)',\r\n                        // borderColor: '#333',\r\n                        borderColor: '#48B2BA',\r\n                        borderWidth: 2,\r\n                        borderRadius: 5,\r\n                        padding: 10,\r\n                        color: '#000',\r\n                        fontSize: 14,\r\n                        shadowBlur: 3,\r\n                        shadowColor: '#888',\r\n                        shadowOffsetX: 0,\r\n                        shadowOffsetY: 3,\r\n                        lineHeight: 18,\r\n                        rich: {\r\n                            a: {\r\n                                textBorderColor: '#000',\r\n                                textBorderWidth: 1\r\n                            },\r\n                            b: {\r\n                                color: '#000'\r\n                            },\r\n                            c: {\r\n                                color: '#48B2BA',\r\n                                textShadowBlur: 1,\r\n                                textShadowColor: '#888',\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n            }],\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id='mcharts' style={{ width: '100%', height: window.innerHeight * 0.5 }}>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n// 国内数据\r\nimport provinceNewConfirmed from '../data/China (Provincial-level)/New_confirmed.json';\r\n\r\n//国际数据\r\nimport countryNewConfirmed from '../data/Global/New_confirmed.json';\r\n\r\nlet provinceNewConfirmedData = provinceNewConfirmed.arrayList;\r\nlet countryNewConfirmedData = countryNewConfirmed.arrayList;\r\n\r\nfunction getJson(key, jsonObj) {\r\n    var arr = [];\r\n    for (var index in jsonObj) {\r\n        for (var k in jsonObj[index]) {\r\n            if (k === key) {\r\n                arr.push(jsonObj[index][key]);\r\n            } else if (jsonObj[index][k] instanceof Array) {\r\n                getJson(key, jsonObj[index][k]);\r\n            }\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nvar provinces = [];\r\nprovinces = getJson('Region_CN', provinceNewConfirmedData);\r\nvar country = [];\r\ncountry = getJson('Region_CN', countryNewConfirmedData);\r\n\r\n// MainNav\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n}));\r\n\r\nexport class MainNav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            defaultExpanded: false\r\n        }\r\n        // this.MNxialaOnClick = this.MNxialaOnClick.bind(this);\r\n    }\r\n\r\n    setArea = (level1, level2) => {\r\n        this.props.setArea(level1, level2.item);\r\n        this.setState({\r\n            defaultExpanded: false\r\n        });\r\n        // $('html').scrollTop(0);\r\n    }\r\n    // MNdianjiOnClick = () => {\r\n    //     console.log('1');\r\n    //     if ($('.lPart').width() < $(window).width() / 2) {\r\n    //         $('.lPart').css('width', '100%');\r\n    //         $('.rPart').css('width', '100%');\r\n    //     } else {\r\n    //         $('.lPart').css('width', '20%');\r\n    //         $('.rPart').css('width', '80%');\r\n    //     }\r\n    // }\r\n    // MNxialaOnClick = () => {\r\n    //     // this.previousSbiling.click();\r\n    //     console.log(this.previousElementSibling);\r\n    //     this.forceUpdate();\r\n    // }\r\n\r\n    render() {\r\n\r\n        const classes = {};\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <div className=\"title\">正在看 · <b>{this.props.level2}</b></div>\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                        className='MNdianji'\r\n                    >\r\n                        <Typography>国际数据</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails\r\n                        className='MNxiala'\r\n                    >\r\n                        <Typography>\r\n                            {country.map(item => (\r\n                                <Button key={item} onClick={() => { this.setArea('global', { item }) }}>{item}</Button>\r\n                            ))}\r\n                        </Typography>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel2a-content\"\r\n                        id=\"panel2a-header\"\r\n                        className='MNdianji'\r\n                    >\r\n                        <Typography>国内数据</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails className='MNxiala'>\r\n                        <Typography>\r\n                            {provinces.map(item => (\r\n                                <Button key={item} onClick={() => { this.setArea('china', { item }) }}>{item}</Button>\r\n                            ))}\r\n                        </Typography>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel3a-content\"\r\n                        id=\"panel3a-header\"\r\n                        className='MNdianji'\r\n                    >\r\n                        <Typography>湖北省内数据</Typography>\r\n                    </AccordionSummary>\r\n                </Accordion>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nexport class SubNav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    setMainEChartsType = (i) => {\r\n        this.props.setMainEChartsType(i);\r\n    }\r\n    setDeEChartsM = (i) => {\r\n        this.props.setDeEChartsM(i);\r\n    }\r\n    render() {\r\n        const handleChange = (event, newValue) => {\r\n            this.props.setTime(newValue);\r\n        };\r\n        return (\r\n            <div className=\"SubNav\">\r\n                <div className=\"centerBut\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className=\"SubNavBut\"\r\n                        onClick={() => { this.setMainEChartsType('themeRiver') }}\r\n                    >河流图</Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className=\"SubNavBut\"\r\n                        onClick={() => { this.setMainEChartsType('bar') }}\r\n                    >柱状图</Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className=\"SubNavBut\"\r\n                        onClick={() => { this.setMainEChartsType('line') }}\r\n                    >折线图</Button>\r\n                </div>\r\n                <div>\r\n                    <Typography id=\"range-slider\" gutterBottom>\r\n                        默认时间范围\r\n                    </Typography>\r\n                    <Slider\r\n                        value={this.props.timeValue}\r\n                        onChange={handleChange}\r\n                        valueLabelDisplay=\"auto\"\r\n                        aria-labelledby=\"range-slider\"\r\n                    // getAriaValueText={this.props.timeValueText}\r\n                    />\r\n                </div>\r\n                <hr></hr><br></br>\r\n                每日占比图月份 · 当前 {this.props.DeEChartsM}<br></br>\r\n                <div className=\"centerBut\">\r\n                    <Button\r\n                        className=\"SubNavBut\"\r\n                        onClick={() => { this.setDeEChartsM('2019-12') }}\r\n                    >2019-12</Button>\r\n                    <Button\r\n                        className=\"SubNavBut\"\r\n                        onClick={() => { this.setDeEChartsM('2020-01') }}\r\n                    >2020-01</Button>\r\n                    <Button\r\n                        className=\"SubNavBut\"\r\n                        onClick={() => { this.setDeEChartsM('2020-02') }}\r\n                    >2020-02</Button>\r\n                    <Button\r\n                        className=\"SubNavBut\"\r\n                        onClick={() => { this.setDeEChartsM('2020-03') }}\r\n                    >2019-03</Button>\r\n                    <Button\r\n                        className=\"SubNavBut\"\r\n                        onClick={() => { this.setDeEChartsM('2020-04') }}\r\n                    >2020-04</Button>\r\n                    <Button\r\n                        className=\"SubNavBut\"\r\n                        onClick={() => { this.setDeEChartsM('2020-05') }}\r\n                    >2020-05</Button>\r\n                </div>\r\n                <hr></hr><br></br>\r\n                <div style={{ width: '100%' }}>\r\n                    <FormControl className=\"select\">\r\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                            X轴\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-placeholder-label-label\"\r\n                            id=\"demo-simple-select-placeholder-label\"\r\n                            onChange={handleChange}\r\n                            displayEmpty\r\n                            className=\"\"\r\n                            value={10}\r\n                        >\r\n                            <MenuItem value={10}>人均GDP</MenuItem>\r\n                            <MenuItem value={10}>人均GDP</MenuItem>\r\n                            <MenuItem value={10}>人均GDP</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className=\"select\">\r\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                            Y轴\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-placeholder-label-label\"\r\n                            id=\"demo-simple-select-placeholder-label\"\r\n                            onChange={handleChange}\r\n                            displayEmpty\r\n                            className=\"\"\r\n                            value={10}\r\n                        >\r\n                            <MenuItem value={10}>人均综合医院数</MenuItem>\r\n                            <MenuItem value={10}>人均综合医院数</MenuItem>\r\n                            <MenuItem value={10}>人均综合医院数</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className=\"select\">\r\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                            半径\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-placeholder-label-label\"\r\n                            id=\"demo-simple-select-placeholder-label\"\r\n                            onChange={handleChange}\r\n                            displayEmpty\r\n                            className=\"\"\r\n                            value={10}\r\n                        >\r\n                            <MenuItem value={10}>确诊率</MenuItem>\r\n                            <MenuItem value={10}>确诊率</MenuItem>\r\n                            <MenuItem value={10}>确诊率</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import $ from 'jquery';\r\n$(document).ready(function () {\r\n    $('.MNdianji').click(function () {\r\n        if ($('.lPart').width() < $(window).width() / 2) {\r\n            $('.lPart').css('width', '100%');\r\n            $('.rPart').css('width', '100%');\r\n        } else {\r\n            $('.lPart').css('width', '20%');\r\n            $('.rPart').css('width', '80%');\r\n        }\r\n    });\r\n    $('.MNxiala').click(function () {\r\n        this.parentNode.parentNode.parentNode.parentNode.previousElementSibling.click();\r\n        // console.log(this.parentNode.parentNode.parentNode.parentNode.previousElementSibling);\r\n    });\r\n    // $('.lPart').hover(function(){\r\n    //     $('.lPart').css('width', '100%');\r\n    // });\r\n});","import React, { Component } from 'react';\nimport { MainEChartsRiver } from './components/MainEChartsRiver.js';\nimport { MainEChartsBar } from './components/MainEChartsBar.js';\nimport { DeECharts } from './components/DeECharts.js';\nimport { MoreECharts } from './components/MoreECharts.js';\nimport { MainNav } from './components/MainNav.js';\nimport { SubNav } from './components/SubNav.js';\nimport './js/index.js';\nimport './css/body.css';\n\n// Provider是react-redux两个核心工具之一，作用：将store传递到每个项目中的组件中\n// 第二个工具是connect，稍后会作介绍\n// import { Provider } from 'react-redux'\n// 引入创建好的store实例\n// import store from './store/index.js'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      level1: 'china',\n      level2: '湖北省',\n      timeValue: [10, 50],\n      timeValueText: 37,\n      MainEChartsType: 'themeRiver',\n      DeEChartsM: ['2020-02']\n    };\n    this.setArea = this.setArea.bind(this);\n  }\n  setArea = (level1, level2) => {\n    this.setState({\n      level1: level1,\n      level2: level2\n    })\n  }\n  setTime = ([begin, end]) => {\n    this.setState({\n      timeValue: [begin, end],\n    })\n  }\n  setMainEChartsType = (i) => {\n    this.setState({\n      MainEChartsType: i\n    })\n  }\n  setDeEChartsM = (i) => {\n    this.setState({\n      DeEChartsM: i\n    })\n  }\n  render() {\n    let MainECharts = null;\n    if (this.state.MainEChartsType === \"themeRiver\") {\n      MainECharts =\n        <MainEChartsRiver\n          level1={this.state.level1}\n          level2={this.state.level2}\n          beginTime={this.state.timeValue[0]}\n          endTime={this.state.timeValue[1]}\n        />;\n    } else {\n      MainECharts =\n        <MainEChartsBar\n          level1={this.state.level1}\n          level2={this.state.level2}\n          beginTime={this.state.timeValue[0]}\n          endTime={this.state.timeValue[1]}\n          MainEChartsType={this.state.MainEChartsType}\n        />;\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"head\">\n          Hello,KefangLiu\n        </div>\n        <div className=\"lPart\">\n          <div className=\"card\">\n            <MainNav\n              setArea={this.setArea}\n              level2={this.state.level2} />\n          </div>\n          <div className=\"card\">\n            <SubNav\n              timeValue={this.state.timeValue}\n              timeValueText={this.state.timeValueText}\n              setTime={this.setTime}\n              setMainEChartsType={this.setMainEChartsType}\n              setDeEChartsM={this.setDeEChartsM}\n              DeEChartsM={this.state.DeEChartsM}\n            />\n          </div>\n        </div>\n        <div className=\"rPart\">\n          <div className=\"card\">\n            {MainECharts}\n          </div>\n          <div className=\"lPart-bottom-left\">\n            <div className=\"card\">\n              <DeECharts\n                level1={this.state.level1}\n                level2={this.state.level2}\n                DeEChartsM={this.state.DeEChartsM}\n              />\n            </div>\n          </div>\n          <div className=\"lPart-bottom-right\">\n            <div className=\"card\">\n              <MoreECharts\n                level1={this.state.level1}\n                level2={this.state.level2}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}